{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","FIELD_REVERSE","App","useState","sortField","setSortField","reverseField","setReverseField","sortedPeople","goods","sort","reverse","visibleGoods","good1","good2","localeCompare","length","getSortedPeople","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SACpBC,EAAgB,UA4Bf,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,MAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EA9BR,SAAyBC,EAAOC,EAAMC,GACpC,IAAIC,EAAY,YAAOH,GAEvB,OAAQC,GACN,KAAKX,EACHa,EAAeA,EAAaF,MAAK,SAC/BG,EAAOC,GADwB,OAE5BD,EAAME,cAAcD,MACzB,MACF,KAAKd,EACHY,EAAeA,EAAaF,MAAK,SAC/BG,EAAOC,GADwB,OAE5BD,EAAMG,OAASF,EAAME,UAC1B,MACF,QACEJ,EAAY,UAAOd,GAQvB,OAJIa,IACFC,EAAeA,EAAaD,WAGvBC,EAOcK,CACnBnB,EACAM,EACAE,GAGF,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBACZ,CAAE,WAAYhB,IAAcL,IAC9BsB,QAAS,kBAAMhB,EAAaN,IAJ9B,iCASA,wBACEoB,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,WAAYhB,IAAcJ,IAC9BqB,QAAS,kBAAMhB,EAAaL,IAJ9B,4BASA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,WAAYd,IAAiBL,IACjCoB,QAAS,kBAAMd,EAAgBD,IAAiBL,GAE5C,YANN,sBAWEG,GAAaE,IACf,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAa,MACbE,EAAgB,OALpB,sBAaF,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCvGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ac5560ab.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'Alphabet';\nconst SORT_FIELD_LENGTH = 'Length';\nconst FIELD_REVERSE = 'Reverse';\n\nfunction getSortedPeople(goods, sort, reverse) {\n  let visibleGoods = [...goods];\n\n  switch (sort) {\n    case SORT_FIELD_ALPHABET:\n      visibleGoods = visibleGoods.sort((\n        good1, good2,\n      ) => good1.localeCompare(good2));\n      break;\n    case SORT_FIELD_LENGTH:\n      visibleGoods = visibleGoods.sort((\n        good1, good2,\n      ) => good1.length - good2.length);\n      break;\n    default:\n      visibleGoods = [...goodsFromServer];\n      break;\n  }\n\n  if (reverse) {\n    visibleGoods = visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState(null);\n  const [reverseField, setReverseField] = useState(false);\n\n  const sortedPeople = getSortedPeople(\n    goodsFromServer,\n    sortField,\n    reverseField,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABET })}\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH })}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': reverseField !== FIELD_REVERSE })}\n          onClick={() => setReverseField(reverseField === FIELD_REVERSE\n            ? false\n            : 'Reverse')}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverseField) && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={() => {\n            setSortField(null);\n            setReverseField(null);\n          }}\n        >\n          Reset\n        </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedPeople.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}